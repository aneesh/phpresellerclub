<?php

namespace Resellerclub;

use PHPUnit\Framework\TestCase;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-10-15 at 04:24:44.
 */
class DomainTest extends TestCase {

  /**
   * @var \Resellerclub\Domain
   */
  protected $object;

  /**
   * Sets up the fixture, for example, opens a network connection.
   * This method is called before a test is executed.
   */
  protected function setUp():void {
    $mock = $this->getMockBuilder(Domain::class)
      ->disableOriginalConstructor()
      ->setMethods(['callApi'])
      ->getMock();
    $mock->method('callApi')->willReturn(array('success' => TRUE));
    $this->object = $mock;
  }

  /**
   * @covers \Resellerclub\Domain::checkAvailability
   */
  public function testCheckAvailability() {
    $domainName = 'justrandomdomain';
    $tlds = array('com', 'net');
    $this->assertArrayHasKey(
      'success',
      $this->object->checkAvailability($domainName, $tlds, FALSE)
    );
  }

  /**
   * @covers \Resellerclub\Domain::checkAvailabilityIdn
   */
  public function testCheckAvailabilityIdn() {
    $this->assertArrayHasKey(
      'success',
      $this->object->checkAvailabilityIdn('മലയാളം', 'com', 'ml')
    );
  }

  /**
   * @covers \Resellerclub\Domain::checkAvailabilityPremium
   */
  public function testCheckAvailabilityPremium() {
    $options = array(
      'price-low' => 1000,
      'price-high' => 10000,
      'no-of-results' => 10,
    );
    $this->assertArrayHasKey(
      'success',
      $this->object->checkAvailabilityPremium('example', array(
        'com',
        'net'
      ), $options)
    );
  }

  /**
   * @covers \Resellerclub\Domain::domainSuggestions
   */
  public function testDomainSuggestions() {
    $this->assertArrayHasKey(
      'success',
      $this->object->domainSuggestions('example')
    );
  }

  /**
   * @covers \Resellerclub\Domain::register
   */
  public function testRegister() {
    $customerId = '13647145';
    $contactId = '47738316';

    $domainDetails = array(
      'years' => '1',
      'ns' => array('ns1.onlyfordemo.net', 'ns2.onlyfordemo.net'),
      'customer-id' => $customerId,
      'reg-contact-id' => $contactId,
      'admin-contact-id' => $contactId,
      'tech-contact-id' => $contactId,
      'billing-contact-id' => $contactId,
      'invoice-option' => 'NoInvoice',
    );
    $this->assertArrayHasKey(
      'success',
      $this->object->register('example.com', $domainDetails)
    );
  }

  /**
   * @covers \Resellerclub\Domain::transfer
   */
  public function testTransfer() {
    $customerId = '13647145';
    $contactId = '47738316';

    $domainDetails = array(
      'years' => '1',
      'ns' => array('ns1.onlyfordemo.net', 'ns2.onlyfordemo.net'),
      'customer-id' => $customerId,
      'reg-contact-id' => $contactId,
      'admin-contact-id' => $contactId,
      'tech-contact-id' => $contactId,
      'billing-contact-id' => $contactId,
      'invoice-option' => 'NoInvoice',
    );
    $this->assertArrayHasKey(
      'success',
      $this->object->transfer('example.com',$domainDetails)
    );
  }

  /**
   * @covers \Resellerclub\Domain::submitAuthCode
   */
  public function testSubmitAuthCode() {
    $this->assertArrayHasKey(
      'success',
      $this->object->submitAuthCode(18790876, 'AUTH_CODE_SAMPLE')
    );
  }

  /**
   * @covers \Resellerclub\Domain::validateTransfer
   */
  public function testValidateTransfer() {
    $this->assertArrayHasKey(
      'success',
      $this->object->validateTransfer('example.com')
    );
  }

  /**
   * @covers \Resellerclub\Domain::renew
   */
  public function testRenew() {
    $options = array(
      'years' => 2,
      'exp-date' => time(),
      'invoice-option' => 'PayInvoice',
    );
    $this->assertArrayHasKey(
      'success',
      $this->object->renew(89768907, $options)
    );
  }

  /**
   * @covers \Resellerclub\Domain::searchDomain
   */
  public function testSearchDomain() {
    $options = array(
      'order-by' => 'customerid',
      'status' => 'Suspended',
    );
    $this->assertArrayHasKey(
      'success',
      $this->object->searchDomain($options)
    );
  }

  /**
   * @covers \Resellerclub\Domain::getDefaultNameServer
   */
  public function testGetDefaultNameServer() {
    $this->assertArrayHasKey(
      'success',
      $this->object->getDefaultNameServer(67856789)
    );
  }

  /**
   * @covers \Resellerclub\Domain::getOrderId
   */
  public function testGetOrderId() {
    $this->assertArrayHasKey(
      'success',
      $this->object->getOrderId('example.com')
    );
  }

  /**
   * @covers \Resellerclub\Domain::getDomainDetailsByOrderId
   */
  public function testGetDomainDetailsByOrderId() {
    $this->assertArrayHasKey(
      'success',
      $this->object->getDomainDetailsByOrderId(
        78987657,
        array('ContactIds', 'NsDetails')
      )
    );
  }

  /**
   * @covers \Resellerclub\Domain::getDomainDetailsByDomain
   */
  public function testGetDomainDetailsByDomain() {
    $this->assertArrayHasKey(
      'success',
      $this->object->getDomainDetailsByDomain(
        'example.com',
        array('ContactIds', 'NsDetails')
      )
    );
  }

  /**
   * @covers \Resellerclub\Domain::setNameServer
   */
  public function testSetNameServer() {
    $this->assertArrayHasKey(
      'success',
      $this->object->setNameServer(
        76898765,
        array('ns1.example.com', 'ns2.example.com')
      )
    );
  }

  /**
   * @covers \Resellerclub\Domain::setChildNameServer
   */
  public function testSetChildNameServer() {
    $this->assertArrayHasKey(
      'success',
      $this->object->setChildNameServer(
        89765678,
        'ns1.example.com',
        array('8.8.8.8', '8.8.4.4')
      )
    );
  }

  /**
   * @covers \Resellerclub\Domain::modifyChildNameServerHost
   */
  public function testModifyChildNameServerHost() {
    $this->assertArrayHasKey(
      'success',
      $this->object->modifyChildNameServerHost(
        87698767,
        'ns1.example.com',
        'dns1.example.com'
      )
    );
  }

  /**
   * @covers \Resellerclub\Domain::modifyChildNameServerIp
   */
  public function testModifyChildNameServerIp() {
    $this->assertArrayHasKey(
      'success',
      $this->object->modifyChildNameServerIp(
        89076789,
        'ns1.example.com',
        '8.8.8.8',
        '4.4.4.4'
      )
    );
  }

  /**
   * @covers \Resellerclub\Domain::deleteChildNameServer
   */
  public function testDeleteChildNameServer() {
    $this->assertArrayHasKey(
      'success',
      $this->object->deleteChildNameServer(
        98767890,
        'ns1.example.com',
        '8.8.8.8'
      )
    );
  }

  /**
   * @covers \Resellerclub\Domain::modifyDomainContacts
   */
  public function testModifyDomainContacts() {
    $this->assertArrayHasKey(
      'success',
      $this->object->modifyDomainContacts(
        87906546,
        array(
          'reg-contact-id' => 89076896,
          'admin-contact-id' => 87689087,
          'tech-contact-id' => 89076890,
          'billing-contact-id' => 89768907,
        )
      )
    );
  }

  /**
   * @covers \Resellerclub\Domain::addPrivacyProtection
   */
  public function testAddPrivacyProtection() {
    $this->assertArrayHasKey(
      'success',
      $this->object->addPrivacyProtection(78967890, 'PayInvoice')
    );
  }

  /**
   * @covers \Resellerclub\Domain::modifyPrivacyProtection
   */
  public function testModifyPrivacyProtection() {
    $this->assertArrayHasKey(
      'success',
      $this->object->modifyPrivacyProtection(78967890, FALSE, 'Government Order')
    );
  }

  /**
   * @covers \Resellerclub\Domain::modifyAuthCode
   */
  public function testModifyAuthCode() {
    $this->assertArrayHasKey(
      'success',
      $this->object->modifyAuthCode(87689076, 'AUTH_CODE_NEW')
    );
  }

  /**
   * @covers \Resellerclub\Domain::modifyTheftProtection
   */
  public function testModifyTheftProtection() {
    $this->assertArrayHasKey(
      'success',
      $this->object->modifyTheftProtection(78967890, TRUE)
    );
  }

  /**
   * @covers \Resellerclub\Domain::suspendDomain
   */
  public function testSuspendDomain() {
    $this->assertArrayHasKey(
      'success',
      $this->object->suspendDomain(78976890, 'Government Order')
    );
  }

  /**
   * @covers \Resellerclub\Domain::unsuspendDomain
   */
  public function testUnsuspendDomain() {
    $this->assertArrayHasKey(
      'success',
      $this->object->unsuspendDomain(87909876)
    );
  }

  /**
   * @covers \Resellerclub\Domain::deleteDomain
   */
  public function testDeleteDomain() {
    $this->assertArrayHasKey(
      'success',
      $this->object->deleteDomain(78976890)
    );
  }

  /**
   * @covers \Resellerclub\Domain::restoreDomain
   */
  public function testRestoreDomain() {
    $this->assertArrayHasKey(
      'success',
      $this->object->restoreDomain(89767890, 'PayInvoice')
    );
  }

}
